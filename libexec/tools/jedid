#!/usr/bin/env bash
# vim: set noet syn=bash ft=sh ff=unix fenc=utf-8 ts=2 sw=0 : # GPP default modeline for bash script
# shellcheck shell=bash disable=SC1091,SC2155,SC3010,SC3021,SC3037 source=${GPP_HOME}
#
# Jedid
# Detects macOS auto appearance change and set some CLI applications' color setting

# Part of GPP

# AUTHOR: hmr
# ORIGIN: 2024-03-29


function decho () {
	if (( DEBUG > 0 )); then
		echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*" > /dev/stderr
	fi
}

function check_sidechange() {
	decho "Entering function ${FUNCNAME[0]}..."

	if defaults read -g AppleInterfaceStyle 2>&1 | grep -qi "dark" >& /dev/null; then
		# Dark side
		decho "System theme is dark mode."
		if [[ ${MODE} != "dark" ]]; then
			# Light -> Dark
			decho "Changed to dark side!"
			echo "1"
			return
		fi
	else
		# Light side
		decho "System theme is light mode."
		if [[ ${MODE} != "light" ]]; then
			# Dark -> Light
			decho "Changed to light side!"
			echo "2"
			return
		fi
	fi

	# side not changed
	decho "Side isn't changed."
	echo "0"
	return
}

function main() {
	decho "Entering function ${FUNCNAME[0]}..."

	while true; do
		decho "MODE is ${MODE:-NOT SET}."
		case "$(check_sidechange)" in
			0 )
				decho "Nothing to do."
				;;

			1 )
				## lsd
				decho "Setting lsd dark..."
				CONFIG_DIR="${XDG_CONFIG_HOME}/lsd"
				if [[ -d ${CONFIG_DIR} ]] && cd "${CONFIG_DIR}"; then
					ln -sf themes/default.yaml colors.yaml
				fi

				## bat
				decho "Setting bat dark..."
				CONFIG_DIR="${XDG_CONFIG_HOME}/bat"
				if [[ -d ${CONFIG_DIR} ]]  && cd "${CONFIG_DIR}"; then
					ln -sf config-dark config
				fi

				# set mode
				MODE="dark"
				;;

			2 )
				## lsd
				decho "Setting lsd light..."
				CONFIG_DIR="${XDG_CONFIG_HOME}/lsd"
				if [[ -d ${CONFIG_DIR} ]] && cd "${CONFIG_DIR}"; then
					ln -sf themes/default-light.yaml colors.yaml
				fi

				## bat
				decho "Setting bat light..."
				CONFIG_DIR="${XDG_CONFIG_HOME}/bat"
				if [[ -d ${CONFIG_DIR} ]] && cd "${CONFIG_DIR}"; then
					ln -sf config-light config
				fi

				# set mode
				MODE="light"
				;;
		esac

		# stop working
		sleep 15
	done
}

DEBUG=1
decho "Starting Jedid..."

function trap_exit() {
	decho "Quitting..."
}
trap trap_exit SIGINT

if [[ -z ${XDG_CONFIG_HOME} ]]; then
	decho "Warning: XDG_CONFIG_HOME isn't set. Setting now..."
	XDG_CONFIG_HOME="${HOME}/.config"
fi
decho "XDG_CONFIG_HOME=${XDG_CONFIG_HOME}"
main

