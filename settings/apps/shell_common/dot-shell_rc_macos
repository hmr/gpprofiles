#!/bin/bash
# vim: ft=sh ts=2 sw=2 et fenc=utf-8 ff=unix

# dot-shell_rc_macos
# ORIGIN: 2019-11-12 by hmr

echo "Processing dot-shell_rc_macos"

# Check arg is already set into PATH
function CHECK_PATH () {
  [ -z "$1" ] && return 1
  echo "${PATH}" | grep "${1}" >& /dev/null \
    && return 0 \
    || return 1
  }
  # Add path to GNU software installed by Homebrew
  function HB_ADD_PATH_GNU () {
    [ -z "$1" ] && return 1
    local HB_TARGET=/usr/local/opt/$1/libexec/gnubin
    if [ -d "${HB_TARGET}" ]; then
      export PATH=${HB_TARGET}:${PATH}
      return 0
    else
      return 2
    fi
  }

# Add path to software installed by Homebrew
function HB_ADD_PATH () {
  [ -z "$1" ] && return 1
  local HB_TARGET=/usr/local/opt/$1/bin
  if [ -d "${HB_TARGET}" ]; then
    export PATH=${HB_TARGET}:${PATH}
    return 0
  else
    return 2
  fi
}

# Entry point
if ! echo "${OSTYPE}" | grep -i "darwin" >& /dev/null; then
  echo "  not macOS environmentt."
fi

# Only for bash
case "$(chkshell)" in
  bash )
    echo ${SHELL} | grep "bash" >& /dev/null
    if [ $? -eq 0 ]; then
      echo "  Suppress deprecation warning for bash."
      export BASH_SILENCE_DEPRECATION_WARNING=1
    fi
    ;;
esac

# iTerm2 Shell Integration
#if [ -e "${HOME}/.iterm2_shell_integration.bash" ]; then
#  echo "  Setting iTerm2 shell integration."
#  source ${HOME}/.iterm2_shell_integration.bash
#fi

# Homebrew
# Force to use Homebrew version of curl
export HOMEBREW_FORCE_BREWED_CURL=1

# Not to update automatically
# export HOMEBREW_NO_AUTO_UPDATE=1

# PATH
echo "  Setting PATH..."

# Android Debug Bridge(adb)
echo -n "    Android Studio"
export ANDROID_HOME=${HOME}/Library/Android/sdk
export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

# Ruby gems installed by Homebrew's ruby
echo -n ", Rubygems"
export PATH=${PATH}:/usr/local/lib/ruby/gems/3.0.0/bin

# Use HomeBrew binaries instead of macOS default.
TEMP_TGT="coreutils"
if HB_ADD_PATH_GNU ${TEMP_TGT}; then
  echo -n ", ${TEMP_TGT}"
  alias  ls='gls -CF --color=auto'            # color ls
  alias  ll='gls -CF --color=auto -l'         # long list
  alias  la='gls -CF --color=auto -A'         # all but . and ..
  alias   l='gls -CF --color=auto'            # MS-DOS Style
  alias lla='gls -CF --color=auto -lA'        # long list
  alias  lh='gls -CF --color=auto -lrth'      # Human-readable special
  alias lha='gls -CF --color=auto -lrthA'     # Human-readable special
fi

TEMP_TGT="binutils"
CHECK_PATH ${TEMP_TGT} && HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="grep"
HB_ADD_PATH_GNU ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="gnu-sed"
HB_ADD_PATH_GNU ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="gnu-tar"
HB_ADD_PATH_GNU ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="gnu-time"
HB_ADD_PATH_GNU ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="curl-openssl"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="imagemagick@6"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="sqlite"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="bc"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="ruby"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="bzip2"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="zip"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="openssl"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="file"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="llvm"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

TEMP_TGT="python@3.10"
HB_ADD_PATH ${TEMP_TGT} && echo -n ", ${TEMP_TGT}"

# Python3.8
# if [ -d /usr/local/opt/python@3.8/bin ]; then
#   export PATH="/usr/local/opt/python@3.8/bin:${PATH}"
#   echo -n ", Python@3.8"
# fi

# jEnv
echo -n ", jenv"
eval "$(jenv init -)"

echo


