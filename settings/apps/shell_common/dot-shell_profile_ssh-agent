#!/bin/bash

# Part of GPP

# dot-shell_profile_ssh-agent
# ORIGIN: date unknown by hmr

echo "Processing ${UNDERLINE}${GREEN}dot-shell_profile_ssh-agent${NORMAL}"

###
### Settings
###
GPP_SSH_AGENT_FILE="$HOME/.ssh/.ssh-agent"
GPP_SSH_AGENT_NUM_FILE="$HOME/.ssh/.ssh-agent-num"

GPP_SSH_ADD_BIN="$(which ssh-add)"
GPP_SSH_AGENT_BIN="$(which ssh-agent)"

###
### Check GPP installation
###
if [ -f "${HOME}/.gpprofiles" ]; then
	source "${HOME}/.gpprofiles"
elif [ -n "${XDG_CONFIG_HOME}" ] && [ -f "${XDG_CONFIG_HOME}/gpprofiles/gpprofiles" ]; then
	source "${XDG_CONFIG_HOME}/gpprofiles/gpprofiles"
fi

if [ -n "${GPP_HOME}" ]; then
	echo -n "  GPP found. "
	echo -n "  Version: ${GPP_VERSION}. "
	echo    "  Installed on ${GPP_HOME}"

	if [ -z "${GPP_VERSION}" ] || [ -z "${GPP_HOME}" ]; then
		echo "  CAUTION: GPP ISN'T PROPERLY INSTALLED. Bye."
		exit 1
	fi
else
	echo "  GPP not found. Bye"
	exit 1
fi

# Check for ssh-agent
echo "  Searching running ssh-agent..."
if [[ -e ${GPP_SSH_AGENT_FILE} ]]; then
	TMP_PID=$(grep -o "SSH_AGENT_PID.*" "${GPP_SSH_AGENT_FILE}" | grep -Po "\d+")
	TMP_PS=$(ps -p "${TMP_PID}" | tail -n 1)
	if echo "${TMP_PS}" | grep -sq "CMD"; then
		echo "    ssh-agent pid ${SSH_AGENT_PID} isn't exist."
	elif echo "${TMP_PS}" | grep -sq "ssh-agent"; then
		echo "    ssh-agent found. Setting to use it."
		TMP_AGENT_OK=1
	else
		echo "    pid ${SSH_AGENT_PID} isn't exist or not ssh-agent."
	fi

fi

# Sleep to avoid invoking multiple ssh-agent
if ((TMP_AGENT_OK < 1)); then
	TMP_SLEEP1=$((RANDOM % 5 + 1))
	TMP_SLEEP2=$((RANDOM % 9))
	echo -n "  Random sleep for ${TMP_SLEEP1}.${TMP_SLEEP2} secs..."; sleep ${TMP_SLEEP1}.${TMP_SLEEP2}; echo " OK."
	unset TMP_SLEEP1 TMP_SLEEP2
fi

###
### Try to load ssh-agent configuration
###
echo "  Checking ssh-agent configuration file(${GPP_SSH_AGENT_FILE})..."
if [ -f "${GPP_SSH_AGENT_FILE}" ]; then
	echo -n "    Found. Loading the configuration file: "
	source "${GPP_SSH_AGENT_FILE}"
else
	echo    "    Not found."
	GPP_SSH_AGENT_FILE_NOT_FOUND=1
fi

###
### Check ssh-agent status
###
echo "  Checking ssh-agent running on this host..."
if [[ ${SSH_AUTH_SOCK} =~ com.apple.launchd ]]; then
	echo "Seems to be a macOS's Launchd socket. Starting new one."
	SSH_AUTH_SOCK=
fi

${GPP_SSH_ADD_BIN} -l > /dev/null 2>&1
RESULT=$?
case "${RESULT}" in
	0 )
		echo -n "    ssh-agent"
		if [ -n "${GPP_SSH_AGENT_FILE_NOT_FOUND}" ]; then
			echo -n " inherited from upstream to this host"
		else
			echo -n " already existed on this host"
		fi
		echo " is running normally."
		;;

	1 | 2 )
		if [[ -n "${SSH_AGENT_PID}" ]]; then
			TEMP_PS="$(ps -p "${SSH_AGENT_PID}" | tail -n 1)"
			if echo "${TEMP_PS}" | grep -sq "CMD"; then
				echo "    pid ${SSH_AGENT_PID} isn't exist."
			elif echo "${TEMP_PS} | "grep "ssh-agent"; then
				echo "    ssh-agent is running but not configured for use."
			else
				echo "    pid ${SSH_AGENT_PID} isn't exist or not ssh-agent."
			fi
		fi

		if type pgrep &> /dev/null; then
			PS_AGENT="$(pgrep -x ssh-agent)"
		else
			PS_AGENT=$(ps ax | grep "ssh-agent " | grep -v grep)
		fi

		if [ -n "${PS_AGENT}" ]; then
			echo "    Please consider using one of them."
			echo "      ssh-agent processes running on this host."
			echo "        - - - - - - - -"
			while read -r TMP_LINE; do
				echo "        ${TMP_LINE}"
			done <<< "${PS_AGENT}"
			#pgrep -lfa "^ssh-agent"
			#echo "Killing existing ssh-agent processes:"
			#pkill -fe -u `id -u` "^ssh-agent"
			echo "        - - - - - - - -"
		fi
		echo "      Starting new ssh-agent..."
		case $(ssh -V 2>&1 | grep -oP 'OpenSSH_\d+') in
			"OpenSSH_6" )
				echo -n "        OpenSSH V6 found: "
				${GPP_SSH_AGENT_BIN} -s > "${GPP_SSH_AGENT_FILE}"
				;;
			* )
				echo -n "        OpenSSH V7+ found: "
				${GPP_SSH_AGENT_BIN} -E sha1 > "${GPP_SSH_AGENT_FILE}"
				;;
		esac
		source "${GPP_SSH_AGENT_FILE}"
		rm -f "${GPP_SSH_AGENT_NUM_FILE}"

		if [ -n "${GPP_SSH_AGENT_PRIV_KEYS}" ]; then
			echo "      Adding private key to agent... "
			for PRIV_KEY_FILE in ${GPP_SSH_AGENT_PRIV_KEYS}
			do
				${GPP_SSH_ADD_BIN} "${HOME}/.ssh/${PRIV_KEY_FILE}"
				#if [ $? -eq 0 ]; then
				# echo "${PRIV_KEY_FILE} "
				#fi
			done
		else
			echo "      Skipping to add private key(GPP_SSH_AGENT_PRIV_KEYS isn't set)."
		fi
		;;

	* )
		echo "    Unexpectedly failed(RES=${RESULT})"
		echo "    Please report to your admin."
		;;
esac

echo
if [ -n "${SSH_AGENT_PID}" ]; then
	### Show keys
	echo "  Keys held by ssh-agent:"
	while read -r TMP_LINE; do
		echo "    ${TMP_LINE}"
	done <<< "$(${GPP_SSH_ADD_BIN} -l)"
	echo

	### Increment shared number
	TEMP_AGENTS=0
	if [ -e "${GPP_SSH_AGENT_NUM_FILE}" ]; then
		TEMP_AGENTS=$(cat "${GPP_SSH_AGENT_NUM_FILE}")
	fi
	echo -n "$((TEMP_AGENTS + 1))" > "${GPP_SSH_AGENT_NUM_FILE}"
	echo "  $(cat "${GPP_SSH_AGENT_NUM_FILE}") processes are sharing #${SSH_AGENT_PID:-INHERITED} ssh-agent."
fi

unset TMP_AGENT_OK TMP_PID TMP_PS TMP_LINE TEMP_AGENTS TEMP_PS
# vim: set noet ft=sh ff=unix fenc=utf-8 ts=2 sw=0 : # GPP default modeline for shell script
