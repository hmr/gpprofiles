# vim: ft=bash ts=2 sw=2 et fenc=utf-8 ff=unix

# Part of GPP
# dot-shell_rc_gpp

# ORIGIN: 2020-06-28 02:32 by hmr


if [ -f ~/.gpprofiles ]; then
  source ~/.gpprofiles
elif [ -n "${XDG_CONFIG_HOME}" ] && [ -f $XDG_CONFIG_HOME/gpprofiles/gpprofiles ]; then
  source ${XDG_CONFIG_HOME}/gpprofiles/gpprofiles
fi

if [ -n "${GPP_HOME}" ]; then
  echo -n "GPP found. "
  echo -n "Version: ${GPP_VERSION}. "
  echo    "Installed on ${GPP_HOME}"

  if [ -z "${GPP_VERSION}" -o -z "${GPP_HOME}" ]; then
    echo "CAUTION: GPP IS NOT PROPERLY INSTALLED."
    exit 1
  fi

  export GPP_HOME GPP_VERSION
  # Don't change the order.
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_function
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_history
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_alias
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_env
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_misc
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_macos

  # set shell prompt for bash
  case "`chkshell`" in
    bash)
      [ -r ~/.byobu/prompt ] && . ~/.byobu/prompt
      ;;
  esac

  # print tty device of itself
  if [ -n "${TTY}" ]; then
    printf 'This is at [%s]\n' "${TTY}"
  elif which tty >& /dev/null; then
    printf 'This is at [%s]\n' "$(tty)"
  fi

else
  echo "GPP not found. Bye"
fi

