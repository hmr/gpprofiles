# vim: ft=sh ts=2 sw=2 et fenc=utf-8 ff=unix

# Part of GPP
# dot-shell_rc_env
# ORIGIN: Long long ago by hmr


echo "Processing dot-shell_rc_env"
echo -n " "

# Add "/usr/local/sbin" and "/usr/local/bin" to PATH
echo -n " PATH"
echo "${PATH}" | grep "/usr/local/sbin" >& /dev/null || export PATH="/usr/local/sbin:${PATH}"
echo "${PATH}" | grep "/usr/local/bin"  >& /dev/null || export PATH="/usr/local/bin:${PATH}"

# Add local Go installation to PATH
if [ -d "${HOME}/go" ]; then
	echo "${PATH}" | grep "${HOME}/go/bin" >& /dev/null || export PATH="${HOME}/go/bin:${PATH}"
fi

# Add local Cargo(rust) installation to PATH
if [ -d "${XDG_DATA_HOME}/cargo/bin" ]; then
	echo "${PATH}" | grep "${XDG_DATA_HOME}/cargo/bin" >& /dev/null || export PATH="${XDG_DATA_HOME}/cargo/bin:${PATH}"
fi

# Add local installation to PATH
if [ -d "${HOME}/.local/bin" ]; then
  print "${PATH}" | grep "${HOME}/.local/bin" >& /dev/null || export PATH="${HOME}/.local/bin:${PATH}"
fi

# Readline
if [ -r "${XDG_CONFIG_HOME}/readline/inputrc" ]; then
  echo -n ", INPUTRC"
  export INPUTRC="${XDG_CONFIG_HOME}/readline/inputrc"
fi

# Terminal Colors
echo -n ", colors"
export BLACK=$(tput setaf 0)
export RED=$(tput setaf 1)
export GREEN=$(tput setaf 2)
export YELLOW=$(tput setaf 3)
export LIME_YELLOW=$(tput setaf 190)
export POWDER_BLUE=$(tput setaf 153)
export BLUE=$(tput setaf 4)
export MAGENTA=$(tput setaf 5)
export CYAN=$(tput setaf 6)
export WHITE=$(tput setaf 7)
export BRIGHT=$(tput bold)
export NORMAL=$(tput sgr0)
export BLINK=$(tput blink)
export REVERSE=$(tput smso)
export UNDERLINE=$(tput smul)

# Editor settings
echo -n ", VISUAL"
export VISUAL="vim"
echo -n ", EDITOR"
export EDITOR="vim"

# less options
# echo -n ", LESS"
# export LESS="-x4 -q -R -M -N -I"  # tab width 4, print raw characters, use long status, show line numbers
# export LESSHISTSIZE=1000
# if [ -r "${XDG_DATA_HOME}/less/lesshst" ]; then
#   export LESSHISTFILE="${XDG_DATA_HOME}/less/lesshst"
# fi

# Colorize less output
echo -n ", LESS_TERMCAP"
export LESS_TERMCAP_mb=$(printf '\e[01;31m')       # enter blinking mode – red
export LESS_TERMCAP_md=$(printf '\e[01;38;5;180m') # enter double-bright mode – bold light orange
export LESS_TERMCAP_me=$(printf '\e[0m')           # turn off all appearance modes (mb, md, so, us)
export LESS_TERMCAP_se=$(printf '\e[0m')           # leave standout mode
export LESS_TERMCAP_so=$(printf '\e[03;38;5;202m') # enter standout mode – orange background highlight (or italics)
export LESS_TERMCAP_ue=$(printf '\e[0m')           # leave underline mode
export LESS_TERMCAP_us=$(printf '\e[04;38;5;139m') # enter underline mode – underline aubergine

# lesspipe
LESSPIPE=""
[ -z "${LESSPIPE}" ] && which lesspipe >& /dev/null && LESSPIPE="lesspipe"
[ -z "${LESSPIPE}" ] && which lesspipe.sh >& /dev/null && LESSPIPE="lesspipe.sh"
if [ -n "${LESSPIPE}" ]; then
  echo -n ", LESSPIPE"
  eval "$(${LESSPIPE})"
  if which pygmentize >& /dev/null; then
    export LESSCOLORIZER="$(which pygmentize)"
  fi
fi
unset LESSPIPE

# Colorize grep output
echo -n ", GREP_COLORS"
export GREP_COLORS="ms=01;38;5;202:mc=01;31:sl=:cx=:fn=01;38;5;132:ln=32:bn=32:se=00;38;5;242"

# man
echo -n ", MANPAGER"
export MANPAGER="less -n"

# RubyGems
if [ -d "${XDG_DATA_HOME}/gem" ]; then
  echo -n ", RubyGems"
  export GEM_HOME="${XDG_DATA_HOME}/gem"
  export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem"
fi

# npm
if [ -r "${XDG_CONFIG_HOME}/npm/npmrc" ]; then
  echo -n ", npm"
  export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"
fi

# vim
if [ -r "${XDG_CONFIG_HOME}/vim/vimrc" ]; then
	echo -n ", VIMINIT"
	export VIMINIT=":source ${XDG_CONFIG_HOME}/vim/vimrc"
fi

# GnuPG home
if [ -d "${XDG_CONFIG_HOME}/gnupg" ]; then
	echo -n ", GNUPGHOME"
	export GNUPGHOME="${XDG_CONFIG_HOME}/gnupg"
fi

# WeeChat setting
if [ -d "${XDG_CONFIG_HOME}/weechat" ]; then
	echo -n ", WeeChat"
  export WEECHAT_HOME=${XDG_CONFIG_HOME}/weechat
else
  export WEECHAT_HOME=${HOME}/.weechat
fi

# Cargo(buildsystem of Rust)
if [ -d "${XDG_DATA_HOME}/cargo" ]; then
  echo -n ", CARGO_HOME"
  export CARGO_HOME="${XDG_DATA_HOME}/cargo"
fi

# Gradle
if [ -d "${XDG_DATA_HOME}/gradle" ]; then
  echo -n ", GRADLE_USER_HOME"
  export GRADLE_USER_HOME="${XDG_DATA_HOME}/gradle"
fi

# OpenSSL .rnd file
if [ -r "${XDG_DATA_HOME}/openssl/rnd" ]; then
  echo -n ", RANDFILE"
  export RANDFILE="${XDG_DATA_HOME}/openssl/rnd"
fi

# Spaceemacs
if [ -d "${XDG_CONFIG_HOME}/spacemacs" ]; then
  echo -n " SPACEMACSDIR"
  export SPACEMACSDIR="${XDG_CONFIG_HOME}/spacemacs"
fi

# ELinks
if [ -d "${XDG_CONFIG_HOME}/elinks" ]; then
  echo -n ", ELINKS_CONFDIR"
  export ELINKS_CONFDIR="${XDG_CONFIG_HOME}/elinks"
fi

# XZ
if which xz >& /dev/null; then
  echo -n ", XZ"
  export XZ_DEFAULTS="-0 --block-size=1MiB -T0"
fi

# Set prompt
echo -n ", PS1"
if [ "$(id -g)" = "0" ]; then
	TMP_PROMPT_SYM="#"
else
	TMP_PROMPT_SYM="$"
fi
PS1="${debian_chroot:+($debian_chroot)}\[\e[38;5;69m\]\u\[\e[38;5;214m\]@\[\e[38;5;167m\]\h\[\e[38;5;214m\]:\[\e[38;5;71m\]\w\[\e[38;5;214m\]\${TMP_PROMPT_SYM}\[\e[00m\] "

echo

# Read secret data
# If you want to set a password or other secret information,
#     create a file "dot-shell_rc_env_secret" and put it in the file.
if [ -r "${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_env_secret" ]; then
  source ${GPP_HOME}/settings/apps/shell_common/dot-shell_rc_env_secret
fi
