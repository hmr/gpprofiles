# vim: ft=zsh ts=2 sw=2 et ff=unix fenc=utf-8

# Part of GPP
# dot-zshrc
#
# ORIGIN: 2020-06-22 by hmr

zmodload zsh/zprof && zprof

echo "Processing dot-zshrc..."

# System-wide zshrc
[ -r /usr/local/etc/zshrc ] && source /usr/local/etc/zshrc

# zsh options
source ${ZDOTDIR:-${HOME}}/.zshrc_setopt

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Zplug settings
if [ -d /usr/local/opt/zplug ]; then
  export ZPLUG_HOME=/usr/local/opt/zplug
elif [ -d /usr/share/zplug ]; then
  export ZPLUG_HOME=${ZDOTDIR:-${HOME}}/zplug
fi

# Loading Zplug
if [ -n "${ZPLUG_HOME}" ]; then
  source $ZPLUG_HOME/init.zsh

  zplug "zsh-users/zsh-completions"
  # autoload -Uz compinit && compinit
  zplug "zsh-users/zsh-autosuggestions", defer:2
  # enhances the terminal environment with 256 colors
  zplug "chrissicool/zsh-256color", defer:2
  # コマンドを種類毎に色づけ
  zplug "zsh-users/zsh-syntax-highlighting", defer:3
  # ヒストリの補完強化
  zplug "zsh-users/zsh-history-substring-search", defer:3
  # Gitの補完
  zplug "plugins/git",   from:oh-my-zsh, defer:3
  # Gitのエイリアスも補完
  zplug "peterhurford/git-aliases.zsh", defer:3

  # Use with fzf
  # Ctrl-Rで履歴検索、Ctrl-Tでファイル名検索補完できる
  zplug "junegunn/fzf", use:shell/key-bindings.zsh, defer:2
  #zplug "junegunn/fzf", use:shell/completion.zsh # cd **[TAB], vim **[TAB]などでファイル名を補完できる#zplug "junegunn/fzf"
  # fzf でよく使う関数の詰め合わせ
  #zplug "mollifier/anyframe"
  # ディレクトリ移動を高速化（fzf であいまい検索）
  zplug "b4b4r07/enhancd", use:init.sh, defer:2
  # git のローカルリポジトリを一括管理（fzf でリポジトリへジャンプ）
  #zplug "motemen/ghq", as:command, from:gh-r

  #zplug "modules/prompt", from:prezto
  zplug "romkatv/powerlevel10k", as:theme, depth:1

  # Install plugins if there are plugins that have not been installed
  # if ! zplug check --verbose; then
  #   # if ! zplug check; then
  #   printf "Install? [y/N]: "
  #   if read -q; then
  #     echo; zplug install
  #   fi
  # fi

  # Then, source plugins and add commands to $PATH
  #zplug load --verbose
  zplug load
  if [ $?=0 ]; then
    echo "  zplug successfully loaded."
  else
    echo "  zplug abnormally loaded."
  fi

  # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
  export POWERLEVEL9K_CONFIG_FILE=${ZDOTDIR:-${HOME}}/.p10k.zsh
  [[ ! -f ${ZDOTDIR:-~}/.p10k.zsh ]] || source ${ZDOTDIR:-~}/.p10k.zsh
  echo

  # fzf settings
  export FZF_DEFAULT_OPTS="-m --height 40% --border"
  if type rg >& /dev/null; then
    export FZF_DEFAULT_COMMAND="rg --files"
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
    export FZF_ALT_C_COMMAND="${FZF_DEFAULT_COMMAND}"
  elif type fd >& /dev/null; then
    export FZF_DEFAULT_COMMAND="fd --type f"
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
    export FZF_ALT_C_COMMAND="${FZF_DEFAULT_COMMAND}"
  else
    echo "fzf is used with super-slow 'find' now because neither 'ripgrep' nor 'fd' is installed. Consider installing one of them."
    export FZF_DEFAULT_COMMAND="find * --type f"
    export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
    export FZF_ALT_C_COMMAND="${FZF_DEFAULT_COMMAND}"
  fi

  # enhancd settings
  export ENHANCD_DIR=${ZDOTDIR:-~}/enhancd
  export ENHANCD_FILTER=fzf-tmux:fzf
  export ENHANCD_DISABLE_DOT=1
  export ENHANCD_DISABLE_HOME=1
  export ENHANCD_HOOK_AFTER_CD=pwd

else
  # zplug not found
  echo "  ===== zplug not found. Consider installing it. ====="
fi

# GPProfiles
source ${ZDOTDIR:-~}/.zshrc_gpp # gpprofile
# Spotify-cli
export LIBSPDIR="/Users/hmr/src/spotify-cli/lib/libspotify-cli"
# Help command(Alt+H)
autoload -Uz run-help
alias help=run-help

##### Keyboard and Keybinding
# Keyboard layout(US101, JP109, Mac-US, Mac-JIS, Keychron_K2_Mac, etc...)
KBDLAYOUT="Keychron_K2_Mac"

# set keybinding to emacs mode
bindkey -e
# zsh-history-substring-search(Up and Down key)
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Extra key config
if [ -r ~/.config/zsh/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE-$KBDLAYOUT} ]; then
  source ~/.config/zsh/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE-$KBDLAYOUT}
fi
bindkey '^[[1;3D' backward-word     # Alt+Left
bindkey '^[[1;3C' forward-word      # Alt+Right
# Example settings
# [[ -n ${key[Left]} ]] && bindkey "${key[Left]}" backward-char
# [[ -n ${key[Right]} ]] && bindkey "${key[Right]}" forward-char
# .zshrc
if (which zprof > /dev/null 2>&1) ;then
  zprof
fi
